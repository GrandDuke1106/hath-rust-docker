name: Build and Publish Multi-Arch Static Docker Image

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  IMAGE_REPO_NAME: hath-rust-docker
  HATH_RUST_VERSION: 'v1.14.0'

jobs:
  build-binaries:
    name: Build static binaries
    runs-on: ubuntu-22.04-arm
    
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            arch: amd64
          - target: aarch64-unknown-linux-musl
            arch: arm64
          - target: armv7-unknown-linux-musleabihf
            arch: arm

    steps:
      - name: Checkout hath-rust repository
        uses: actions/checkout@v4
        with:
          repository: 'james58899/hath-rust'
          ref: ${{ env.HATH_RUST_VERSION }}

      - name: Install Rust and musl target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install LLVM and Cross-compilation Headers
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 19 all
          sudo apt-get update
          sudo apt-get install -y libgcc-11-dev-amd64-cross libgcc-11-dev-armhf-cross

      - name: Build static binary for ${{ matrix.target }}
        run: cargo build --verbose --release --target=${{ matrix.target }}
        env:
          CC: clang-19
          CXX: clang-19
          CFLAGS: "-fuse-ld=lld-19 -Qunused-arguments"
          CXXFLAGS: "-fuse-ld=lld-19 -Qunused-arguments"
          
          CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_RUSTFLAGS: "-Clinker=clang-19 -Clink-arg=-fuse-ld=lld-19 -Clink-arg=--target=x86_64-unknown-linux-musl"
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_RUSTFLAGS: "-Clinker=clang-19 -Clink-arg=-fuse-ld=lld-19 -Clink-arg=--target=aarch64-unknown-linux-musl"
          CARGO_TARGET_ARMV7_UNKNOWN_LINUX_MUSLEABIHF_RUSTFLAGS: "-Clinker=clang-19 -Clink-arg=-fuse-ld=lld-19 -Clink-arg=--target=armv7-unknown-linux-musleabihf"

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: hath-rust-${{ matrix.arch }}
          path: target/${{ matrix.target }}/release/hath-rust
          retention-days: 1

  build-and-push-docker:
    name: Build and Push Docker Image to Docker Hub
    needs: build-binaries
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository with Dockerfile
        uses: actions/checkout@v4
      - name: Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_REPO_NAME }}
          tags: |
            type=raw,value=master,enable=${{ github.ref == 'refs/heads/master' }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{version}}
      - name: Build and push multi-platform image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}